import com.amazonaws.auth.*
import com.amazonaws.auth.profile.*

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    // Install AWS SDK so that we can use local AWS credentials for S3 access
    classpath 'com.amazonaws:aws-java-sdk-core:1.11.202'
  }
}

plugins {
  id 'java'
  id 'maven'
  id 'maven-publish'
  id 'eclipse'
  id 'idea'
}

// Apply code quality checks
apply from: "$rootProject.projectDir/gradle/codeQuality.gradle"
// Publish artifact to Maven repositiory
if (project.hasProperty("signing")) {
  apply from: "$rootProject.projectDir/gradle/publishArtifact.gradle"
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.1'
}

repositories {
  mavenLocal()
  mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
group = "oi.thekraken"
archivesBaseName = "grok"
version = '0.1.6-SNAPSHOT'

dependencies {
  compile "org.apache.commons:commons-lang3:3.7"
  compile "com.google.code.gson:gson:2.8.2"
  compile "com.google.guava:guava:24.0-jre"
  compile "org.slf4j:slf4j-api:1.7.21"

  testCompile group: 'junit', name: 'junit', version: '4.12'
}

def awsCredentials = new DefaultAWSCredentialsProviderChain().getCredentials()

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }

  repositories {
    maven {
      url "s3://repo.dashbase.io/snapshot"
      credentials(AwsCredentials) {
        accessKey awsCredentials.AWSAccessKeyId
        secretKey awsCredentials.AWSSecretKey
      }
    }
  }
}